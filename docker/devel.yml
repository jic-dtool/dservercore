version: '3'

volumes:
  postgres_data: {}
  mongo_data: {}
  minio_data: {}
  key_data: {}

services:
  dtool_lookup_server:
    build:
      context: ..
      dockerfile: ./docker/dtool_lookup_server_devel/Dockerfile
    image: local_dtool_lookup_server
    depends_on:
      postgres:
        condition: service_started
      mongo:
        condition: service_started
      minio:
        condition: service_started
      minio-create-buckets:
        condition: service_completed_successfully
    volumes:
      - ..:/app
      - key_data:/keys
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://admin:secret12@postgres:5432/dtool
      # - MONGO_URI=mongodb://mongo:27017/dtool_info
      - SEARCH_MONGO_URI=mongodb://mongo:27017/
      - SEARCH_MONGO_DB=dtool_info
      - SEARCH_MONGO_COLLECTION=datasets
      - RETRIEVE_MONGO_URI=mongodb://mongo:27017/
      - RETRIEVE_MONGO_DB=dtool_info
      - RETRIEVE_MONGO_COLLECTION=datasets
      - JWT_PUBLIC_KEY_FILE=/keys/jwt_key.pub
      - JWT_PRIVATE_KEY_FILE=/keys/jwt_key
      - DUMP_HTTP_REQUESTS=True
      - LOGLEVEL=DEBUG
    ports:
      - "5000:5000"

  postgres:
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_DB=dtool
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret12
    ports:
      - "5432:5432"

  mongo:
    image: mongo:latest
    restart: always
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_DATA_DIR=/data/db
    ports:
      - "27017:27017"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=secret12
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-create-buckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - BUCKET_NAME=test-bucket
      - ENDPOINT=http://minio:9000
    entrypoint: >
        /bin/sh -c "
        /usr/bin/mc config host add minio http://minio:9000 admin secret12;
        /usr/bin/mc mb minio/test-bucket;
        /usr/bin/mc policy set public minio/test-bucket;
        exit 0;
        "

  token_generator_ldap:
    hostname: token-generator-ldap
    image: jotelha/dtool-token-generator-ldap:latest
    restart: always
    command: /start
    volumes:
      - key_data:/keys
    depends_on:
      ldap:
        condition: service_started
      dtool_lookup_server:
        condition: service_started
    environment:
      - FLASK_APP=app.py
      - FLASK_CONFIG_FILE=production.cfg
      - JWT_PUBLIC_KEY_FILE=/keys/jwt_key.pub
      - JWT_PRIVATE_KEY_FILE=/keys/jwt_key
      - JWT_ACCESS_TOKEN_EXPIRES=3600
    ports:
      - "5001:5001"

  ldap:
    image: bitnami/openldap:latest
    restart: always
    expose:
      - "1389"
    environment:
      - LDAP_USERS=test-user
      - LDAP_PASSWORDS=test-password
